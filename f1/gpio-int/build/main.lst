ARM GAS  /var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB71:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/main.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/main.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                             www.st.com/SLA0044
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** 
  21:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/main.c **** #include "main.h"
  23:Core/Src/main.c **** #include "cmsis_os.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include "FreeRTOSConfig.h"
  28:Core/Src/main.c **** #include "FreeRTOS.h"
  29:Core/Src/main.c **** #include "task.h"
  30:Core/Src/main.c **** #include "event_groups.h"
  31:Core/Src/main.c **** /* USER CODE END Includes */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PD */
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** EventGroupHandle_t xEvtLed;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** /* Definitions for defaultTask */
  50:Core/Src/main.c **** osThreadId_t defaultTaskHandle;
  51:Core/Src/main.c **** const osThreadAttr_t defaultTask_attributes = {
  52:Core/Src/main.c ****   .name = "defaultTask",
  53:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityNormal,
  54:Core/Src/main.c ****   .stack_size = 128 * 4
  55:Core/Src/main.c **** };
  56:Core/Src/main.c **** /* USER CODE BEGIN PV */
  57:Core/Src/main.c **** void SystemClock_Config(void);
  58:Core/Src/main.c **** static void MX_GPIO_Init(void);
  59:Core/Src/main.c **** void StartDefaultTask(void *argument);
  60:Core/Src/main.c **** static EventGroupHandle_t xEventLed;
  61:Core/Src/main.c **** #define EVENT_BITS_LED 0xFFFF
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END PV */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  66:Core/Src/main.c **** void SystemClock_Config(void);
  67:Core/Src/main.c **** static void MX_GPIO_Init(void);
  68:Core/Src/main.c **** void StartDefaultTask(void *argument);
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* USER CODE END PFP */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  75:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* USER CODE END 0 */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /**
  80:Core/Src/main.c ****   * @brief  The application entry point.
  81:Core/Src/main.c ****   * @retval int
  82:Core/Src/main.c ****   */
  83:Core/Src/main.c **** int main(void)
  84:Core/Src/main.c **** {
  85:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE END 1 */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  90:Core/Src/main.c **** 
ARM GAS  /var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s 			page 3


  91:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  92:Core/Src/main.c ****   HAL_Init();
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE END Init */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Configure the system clock */
  99:Core/Src/main.c ****   SystemClock_Config();
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE END SysInit */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Initialize all configured peripherals */
 106:Core/Src/main.c ****   MX_GPIO_Init();
 107:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 108:Core/Src/main.c ****   xEventLed = xEventGroupCreate();
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE END 2 */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* Init scheduler */
 113:Core/Src/main.c ****   osKernelInitialize();
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 116:Core/Src/main.c ****   /* add mutexes, ... */
 117:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 120:Core/Src/main.c ****   /* add semaphores, ... */
 121:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 124:Core/Src/main.c ****   /* start timers, add new ones, ... */
 125:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 128:Core/Src/main.c ****   /* add queues, ... */
 129:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* Create the thread(s) */
 132:Core/Src/main.c ****   /* creation of defaultTask */
 133:Core/Src/main.c ****   defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 136:Core/Src/main.c ****   /* add threads, ... */
 137:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /* Start scheduler */
 140:Core/Src/main.c ****   osKernelStart();
 141:Core/Src/main.c ****  
 142:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 143:Core/Src/main.c ****   /* Infinite loop */
 144:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 145:Core/Src/main.c ****   while (1)
 146:Core/Src/main.c ****   {
 147:Core/Src/main.c ****     /* USER CODE END WHILE */
ARM GAS  /var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s 			page 4


 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 150:Core/Src/main.c ****   }
 151:Core/Src/main.c ****   /* USER CODE END 3 */
 152:Core/Src/main.c **** }
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** /**
 155:Core/Src/main.c ****   * @brief System Clock Configuration
 156:Core/Src/main.c ****   * @retval None
 157:Core/Src/main.c ****   */
 158:Core/Src/main.c **** void SystemClock_Config(void)
 159:Core/Src/main.c **** {
 160:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 161:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks 
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 166:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 167:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 168:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 172:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 173:Core/Src/main.c ****   {
 174:Core/Src/main.c ****     Error_Handler();
 175:Core/Src/main.c ****   }
 176:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks 
 177:Core/Src/main.c ****   */
 178:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 179:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 180:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 181:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 182:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 183:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 186:Core/Src/main.c ****   {
 187:Core/Src/main.c ****     Error_Handler();
 188:Core/Src/main.c ****   }
 189:Core/Src/main.c **** }
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** /**
 192:Core/Src/main.c ****   * @brief GPIO Initialization Function
 193:Core/Src/main.c ****   * @param None
 194:Core/Src/main.c ****   * @retval None
 195:Core/Src/main.c ****   */
 196:Core/Src/main.c **** static void MX_GPIO_Init(void)
 197:Core/Src/main.c **** {
  26              		.loc 1 197 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
ARM GAS  /var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s 			page 5


  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 198:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 198 3 view .LVU1
  40              		.loc 1 198 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0494     		str	r4, [sp, #16]
  43 0008 0594     		str	r4, [sp, #20]
  44 000a 0694     		str	r4, [sp, #24]
  45 000c 0794     		str	r4, [sp, #28]
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 201:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  46              		.loc 1 201 3 is_stmt 1 view .LVU3
  47              	.LBB2:
  48              		.loc 1 201 3 view .LVU4
  49              		.loc 1 201 3 view .LVU5
  50 000e 264B     		ldr	r3, .L3
  51 0010 9A69     		ldr	r2, [r3, #24]
  52 0012 42F01002 		orr	r2, r2, #16
  53 0016 9A61     		str	r2, [r3, #24]
  54              		.loc 1 201 3 view .LVU6
  55 0018 9A69     		ldr	r2, [r3, #24]
  56 001a 02F01002 		and	r2, r2, #16
  57 001e 0092     		str	r2, [sp]
  58              		.loc 1 201 3 view .LVU7
  59 0020 009A     		ldr	r2, [sp]
  60              	.LBE2:
  61              		.loc 1 201 3 view .LVU8
 202:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  62              		.loc 1 202 3 view .LVU9
  63              	.LBB3:
  64              		.loc 1 202 3 view .LVU10
  65              		.loc 1 202 3 view .LVU11
  66 0022 9A69     		ldr	r2, [r3, #24]
  67 0024 42F02002 		orr	r2, r2, #32
  68 0028 9A61     		str	r2, [r3, #24]
  69              		.loc 1 202 3 view .LVU12
  70 002a 9A69     		ldr	r2, [r3, #24]
  71 002c 02F02002 		and	r2, r2, #32
  72 0030 0192     		str	r2, [sp, #4]
  73              		.loc 1 202 3 view .LVU13
  74 0032 019A     		ldr	r2, [sp, #4]
  75              	.LBE3:
  76              		.loc 1 202 3 view .LVU14
 203:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  77              		.loc 1 203 3 view .LVU15
  78              	.LBB4:
  79              		.loc 1 203 3 view .LVU16
  80              		.loc 1 203 3 view .LVU17
  81 0034 9A69     		ldr	r2, [r3, #24]
  82 0036 42F00802 		orr	r2, r2, #8
  83 003a 9A61     		str	r2, [r3, #24]
ARM GAS  /var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s 			page 6


  84              		.loc 1 203 3 view .LVU18
  85 003c 9A69     		ldr	r2, [r3, #24]
  86 003e 02F00802 		and	r2, r2, #8
  87 0042 0292     		str	r2, [sp, #8]
  88              		.loc 1 203 3 view .LVU19
  89 0044 029A     		ldr	r2, [sp, #8]
  90              	.LBE4:
  91              		.loc 1 203 3 view .LVU20
 204:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  92              		.loc 1 204 3 view .LVU21
  93              	.LBB5:
  94              		.loc 1 204 3 view .LVU22
  95              		.loc 1 204 3 view .LVU23
  96 0046 9A69     		ldr	r2, [r3, #24]
  97 0048 42F00402 		orr	r2, r2, #4
  98 004c 9A61     		str	r2, [r3, #24]
  99              		.loc 1 204 3 view .LVU24
 100 004e 9B69     		ldr	r3, [r3, #24]
 101 0050 03F00403 		and	r3, r3, #4
 102 0054 0393     		str	r3, [sp, #12]
 103              		.loc 1 204 3 view .LVU25
 104 0056 039B     		ldr	r3, [sp, #12]
 105              	.LBE5:
 106              		.loc 1 204 3 view .LVU26
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 207:Core/Src/main.c ****   HAL_GPIO_WritePin(SOC_LED_GPIO_Port, SOC_LED_Pin, GPIO_PIN_RESET);
 107              		.loc 1 207 3 view .LVU27
 108 0058 144D     		ldr	r5, .L3+4
 109 005a 2246     		mov	r2, r4
 110 005c 4FF40051 		mov	r1, #8192
 111 0060 2846     		mov	r0, r5
 112 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 113              	.LVL0:
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /*Configure GPIO pin : SOC_LED_Pin */
 210:Core/Src/main.c ****   GPIO_InitStruct.Pin = SOC_LED_Pin;
 114              		.loc 1 210 3 view .LVU28
 115              		.loc 1 210 23 is_stmt 0 view .LVU29
 116 0066 4FF40053 		mov	r3, #8192
 117 006a 0493     		str	r3, [sp, #16]
 211:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 118              		.loc 1 211 3 is_stmt 1 view .LVU30
 119              		.loc 1 211 24 is_stmt 0 view .LVU31
 120 006c 0123     		movs	r3, #1
 121 006e 0593     		str	r3, [sp, #20]
 212:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 122              		.loc 1 212 3 is_stmt 1 view .LVU32
 123              		.loc 1 212 24 is_stmt 0 view .LVU33
 124 0070 0694     		str	r4, [sp, #24]
 213:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 125              		.loc 1 213 3 is_stmt 1 view .LVU34
 126              		.loc 1 213 25 is_stmt 0 view .LVU35
 127 0072 0323     		movs	r3, #3
 128 0074 0793     		str	r3, [sp, #28]
 214:Core/Src/main.c ****   HAL_GPIO_Init(SOC_LED_GPIO_Port, &GPIO_InitStruct);
 129              		.loc 1 214 3 is_stmt 1 view .LVU36
ARM GAS  /var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s 			page 7


 130 0076 04A9     		add	r1, sp, #16
 131 0078 2846     		mov	r0, r5
 132 007a FFF7FEFF 		bl	HAL_GPIO_Init
 133              	.LVL1:
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /*Configure GPIO pin : MY_PIN_INT_Pin */
 217:Core/Src/main.c ****   GPIO_InitStruct.Pin = MY_PIN_INT_Pin;
 134              		.loc 1 217 3 view .LVU37
 135              		.loc 1 217 23 is_stmt 0 view .LVU38
 136 007e 4FF48053 		mov	r3, #4096
 137 0082 0493     		str	r3, [sp, #16]
 218:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 138              		.loc 1 218 3 is_stmt 1 view .LVU39
 139              		.loc 1 218 24 is_stmt 0 view .LVU40
 140 0084 0A4B     		ldr	r3, .L3+8
 141 0086 0593     		str	r3, [sp, #20]
 219:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 142              		.loc 1 219 3 is_stmt 1 view .LVU41
 143              		.loc 1 219 24 is_stmt 0 view .LVU42
 144 0088 0223     		movs	r3, #2
 145 008a 0693     		str	r3, [sp, #24]
 220:Core/Src/main.c ****   HAL_GPIO_Init(MY_PIN_INT_GPIO_Port, &GPIO_InitStruct);
 146              		.loc 1 220 3 is_stmt 1 view .LVU43
 147 008c 04A9     		add	r1, sp, #16
 148 008e 0948     		ldr	r0, .L3+12
 149 0090 FFF7FEFF 		bl	HAL_GPIO_Init
 150              	.LVL2:
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /* EXTI interrupt init*/
 223:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 5, 0);
 151              		.loc 1 223 3 view .LVU44
 152 0094 2246     		mov	r2, r4
 153 0096 0521     		movs	r1, #5
 154 0098 2820     		movs	r0, #40
 155 009a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 156              	.LVL3:
 224:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 157              		.loc 1 224 3 view .LVU45
 158 009e 2820     		movs	r0, #40
 159 00a0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 160              	.LVL4:
 225:Core/Src/main.c **** 
 226:Core/Src/main.c **** }
 161              		.loc 1 226 1 is_stmt 0 view .LVU46
 162 00a4 09B0     		add	sp, sp, #36
 163              	.LCFI2:
 164              		.cfi_def_cfa_offset 12
 165              		@ sp needed
 166 00a6 30BD     		pop	{r4, r5, pc}
 167              	.L4:
 168              		.align	2
 169              	.L3:
 170 00a8 00100240 		.word	1073876992
 171 00ac 00100140 		.word	1073811456
 172 00b0 00003110 		.word	271646720
 173 00b4 000C0140 		.word	1073810432
 174              		.cfi_endproc
ARM GAS  /var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s 			page 8


 175              	.LFE71:
 177              		.section	.text.StartDefaultTask,"ax",%progbits
 178              		.align	1
 179              		.global	StartDefaultTask
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 183              		.fpu softvfp
 185              	StartDefaultTask:
 186              	.LVL5:
 187              	.LFB73:
 227:Core/Src/main.c **** 
 228:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 229:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t pinNum){
 230:Core/Src/main.c ****   if(pinNum == MY_PIN_INT_Pin){
 231:Core/Src/main.c ****     xEventGroupSetBitsFromISR(xEventLed, 1, NULL);
 232:Core/Src/main.c ****   }
 233:Core/Src/main.c **** }
 234:Core/Src/main.c **** /* USER CODE END 4 */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 237:Core/Src/main.c **** /**
 238:Core/Src/main.c ****   * @brief  Function implementing the defaultTask thread.
 239:Core/Src/main.c ****   * @param  argument: Not used 
 240:Core/Src/main.c ****   * @retval None
 241:Core/Src/main.c ****   */
 242:Core/Src/main.c **** /* USER CODE END Header_StartDefaultTask */
 243:Core/Src/main.c **** void StartDefaultTask(void *argument)
 244:Core/Src/main.c **** {
 188              		.loc 1 244 1 is_stmt 1 view -0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		.loc 1 244 1 is_stmt 0 view .LVU48
 193 0000 30B5     		push	{r4, r5, lr}
 194              	.LCFI3:
 195              		.cfi_def_cfa_offset 12
 196              		.cfi_offset 4, -12
 197              		.cfi_offset 5, -8
 198              		.cfi_offset 14, -4
 199 0002 83B0     		sub	sp, sp, #12
 200              	.LCFI4:
 201              		.cfi_def_cfa_offset 24
 245:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 246:Core/Src/main.c ****   /* Infinite loop */
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   // //LED OFF when pin high
 249:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, 1);
 202              		.loc 1 249 3 is_stmt 1 view .LVU49
 203 0004 0122     		movs	r2, #1
 204 0006 4FF40051 		mov	r1, #8192
 205 000a 1348     		ldr	r0, .L12
 206              	.LVL6:
 207              		.loc 1 249 3 is_stmt 0 view .LVU50
 208 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 209              	.LVL7:
 250:Core/Src/main.c ****   /* Infinite loop */
ARM GAS  /var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s 			page 9


 251:Core/Src/main.c ****   #define BLINK_PERIOD 500
 252:Core/Src/main.c ****   #define BLINK_TIMES 10
 253:Core/Src/main.c ****   int blinkCnt = 0;
 210              		.loc 1 253 3 is_stmt 1 view .LVU51
 254:Core/Src/main.c ****   for(int cnt = 0; ;cnt++)
 211              		.loc 1 254 3 view .LVU52
 212              	.LBB6:
 213              		.loc 1 254 7 view .LVU53
 214              		.loc 1 254 11 is_stmt 0 view .LVU54
 215 0010 0024     		movs	r4, #0
 216              	.LBE6:
 253:Core/Src/main.c ****   for(int cnt = 0; ;cnt++)
 217              		.loc 1 253 7 view .LVU55
 218 0012 2546     		mov	r5, r4
 219 0014 0EE0     		b	.L9
 220              	.LVL8:
 221              	.L6:
 222              	.LBB9:
 223              	.LBB7:
 255:Core/Src/main.c ****   {
 256:Core/Src/main.c ****     EventBits_t bits = xEventGroupWaitBits(xEventLed, EVENT_BITS_LED, pdTRUE, pdFALSE, 500/portTICK
 257:Core/Src/main.c ****     if((bits &1 )|| blinkCnt > 0){
 258:Core/Src/main.c ****       if(blinkCnt == 0){
 224              		.loc 1 258 7 is_stmt 1 view .LVU56
 225              		.loc 1 258 9 is_stmt 0 view .LVU57
 226 0016 05B9     		cbnz	r5, .L8
 259:Core/Src/main.c ****         blinkCnt = BLINK_TIMES;
 227              		.loc 1 259 18 view .LVU58
 228 0018 0A25     		movs	r5, #10
 229              	.LVL9:
 230              	.L8:
 260:Core/Src/main.c ****       }
 261:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, cnt%2);
 231              		.loc 1 261 7 is_stmt 1 view .LVU59
 232              		.loc 1 261 48 is_stmt 0 view .LVU60
 233 001a 002C     		cmp	r4, #0
 234 001c 04F00102 		and	r2, r4, #1
 235 0020 B8BF     		it	lt
 236 0022 5242     		rsblt	r2, r2, #0
 237              		.loc 1 261 7 view .LVU61
 238 0024 D2B2     		uxtb	r2, r2
 239 0026 4FF40051 		mov	r1, #8192
 240 002a 0B48     		ldr	r0, .L12
 241              	.LVL10:
 242              		.loc 1 261 7 view .LVU62
 243 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
 244              	.LVL11:
 262:Core/Src/main.c ****       blinkCnt--;
 245              		.loc 1 262 7 is_stmt 1 view .LVU63
 246              		.loc 1 262 15 is_stmt 0 view .LVU64
 247 0030 013D     		subs	r5, r5, #1
 248              	.LVL12:
 249              	.L7:
 250              		.loc 1 262 15 view .LVU65
 251              	.LBE7:
 254:Core/Src/main.c ****   {
 252              		.loc 1 254 21 is_stmt 1 view .LVU66
ARM GAS  /var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s 			page 10


 254:Core/Src/main.c ****   {
 253              		.loc 1 254 24 is_stmt 0 view .LVU67
 254 0032 0134     		adds	r4, r4, #1
 255              	.LVL13:
 254:Core/Src/main.c ****   {
 256              		.loc 1 254 20 is_stmt 1 view .LVU68
 257              	.L9:
 258              	.LBB8:
 256:Core/Src/main.c ****     if((bits &1 )|| blinkCnt > 0){
 259              		.loc 1 256 5 view .LVU69
 256:Core/Src/main.c ****     if((bits &1 )|| blinkCnt > 0){
 260              		.loc 1 256 24 is_stmt 0 view .LVU70
 261 0034 4FF4FA73 		mov	r3, #500
 262 0038 0093     		str	r3, [sp]
 263 003a 0023     		movs	r3, #0
 264 003c 0122     		movs	r2, #1
 265 003e 4FF6FF71 		movw	r1, #65535
 266 0042 0648     		ldr	r0, .L12+4
 267 0044 0068     		ldr	r0, [r0]
 268 0046 FFF7FEFF 		bl	xEventGroupWaitBits
 269              	.LVL14:
 257:Core/Src/main.c ****       if(blinkCnt == 0){
 270              		.loc 1 257 5 is_stmt 1 view .LVU71
 257:Core/Src/main.c ****       if(blinkCnt == 0){
 271              		.loc 1 257 7 is_stmt 0 view .LVU72
 272 004a 10F0010F 		tst	r0, #1
 273 004e E2D1     		bne	.L6
 257:Core/Src/main.c ****       if(blinkCnt == 0){
 274              		.loc 1 257 18 discriminator 1 view .LVU73
 275 0050 002D     		cmp	r5, #0
 276 0052 E0DC     		bgt	.L6
 277 0054 EDE7     		b	.L7
 278              	.L13:
 279 0056 00BF     		.align	2
 280              	.L12:
 281 0058 00100140 		.word	1073811456
 282 005c 00000000 		.word	.LANCHOR0
 283              	.LBE8:
 284              	.LBE9:
 285              		.cfi_endproc
 286              	.LFE73:
 288              		.section	.text.SystemClock_Config,"ax",%progbits
 289              		.align	1
 290              		.global	SystemClock_Config
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu softvfp
 296              	SystemClock_Config:
 297              	.LFB70:
 159:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 298              		.loc 1 159 1 is_stmt 1 view -0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 64
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302 0000 30B5     		push	{r4, r5, lr}
 303              	.LCFI5:
ARM GAS  /var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s 			page 11


 304              		.cfi_def_cfa_offset 12
 305              		.cfi_offset 4, -12
 306              		.cfi_offset 5, -8
 307              		.cfi_offset 14, -4
 308 0002 91B0     		sub	sp, sp, #68
 309              	.LCFI6:
 310              		.cfi_def_cfa_offset 80
 160:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 311              		.loc 1 160 3 view .LVU75
 160:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 312              		.loc 1 160 22 is_stmt 0 view .LVU76
 313 0004 0024     		movs	r4, #0
 314 0006 0994     		str	r4, [sp, #36]
 315 0008 0B94     		str	r4, [sp, #44]
 316 000a 0C94     		str	r4, [sp, #48]
 161:Core/Src/main.c **** 
 317              		.loc 1 161 3 is_stmt 1 view .LVU77
 161:Core/Src/main.c **** 
 318              		.loc 1 161 22 is_stmt 0 view .LVU78
 319 000c 0194     		str	r4, [sp, #4]
 320 000e 0294     		str	r4, [sp, #8]
 321 0010 0394     		str	r4, [sp, #12]
 322 0012 0494     		str	r4, [sp, #16]
 323 0014 0594     		str	r4, [sp, #20]
 165:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 324              		.loc 1 165 3 is_stmt 1 view .LVU79
 165:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 325              		.loc 1 165 36 is_stmt 0 view .LVU80
 326 0016 0122     		movs	r2, #1
 327 0018 0692     		str	r2, [sp, #24]
 166:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 328              		.loc 1 166 3 is_stmt 1 view .LVU81
 166:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 329              		.loc 1 166 30 is_stmt 0 view .LVU82
 330 001a 4FF48033 		mov	r3, #65536
 331 001e 0793     		str	r3, [sp, #28]
 167:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 332              		.loc 1 167 3 is_stmt 1 view .LVU83
 167:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 333              		.loc 1 167 36 is_stmt 0 view .LVU84
 334 0020 0894     		str	r4, [sp, #32]
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 335              		.loc 1 168 3 is_stmt 1 view .LVU85
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 336              		.loc 1 168 30 is_stmt 0 view .LVU86
 337 0022 0A92     		str	r2, [sp, #40]
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 338              		.loc 1 169 3 is_stmt 1 view .LVU87
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 339              		.loc 1 169 34 is_stmt 0 view .LVU88
 340 0024 0225     		movs	r5, #2
 341 0026 0D95     		str	r5, [sp, #52]
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 342              		.loc 1 170 3 is_stmt 1 view .LVU89
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 343              		.loc 1 170 35 is_stmt 0 view .LVU90
 344 0028 0E93     		str	r3, [sp, #56]
ARM GAS  /var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s 			page 12


 171:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 345              		.loc 1 171 3 is_stmt 1 view .LVU91
 171:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 346              		.loc 1 171 32 is_stmt 0 view .LVU92
 347 002a 0F94     		str	r4, [sp, #60]
 172:Core/Src/main.c ****   {
 348              		.loc 1 172 3 is_stmt 1 view .LVU93
 172:Core/Src/main.c ****   {
 349              		.loc 1 172 7 is_stmt 0 view .LVU94
 350 002c 06A8     		add	r0, sp, #24
 351 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 352              	.LVL15:
 178:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 353              		.loc 1 178 3 is_stmt 1 view .LVU95
 178:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 354              		.loc 1 178 31 is_stmt 0 view .LVU96
 355 0032 0F23     		movs	r3, #15
 356 0034 0193     		str	r3, [sp, #4]
 180:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 357              		.loc 1 180 3 is_stmt 1 view .LVU97
 180:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 358              		.loc 1 180 34 is_stmt 0 view .LVU98
 359 0036 0295     		str	r5, [sp, #8]
 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 360              		.loc 1 181 3 is_stmt 1 view .LVU99
 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 361              		.loc 1 181 35 is_stmt 0 view .LVU100
 362 0038 0394     		str	r4, [sp, #12]
 182:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 363              		.loc 1 182 3 is_stmt 1 view .LVU101
 182:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 364              		.loc 1 182 36 is_stmt 0 view .LVU102
 365 003a 0494     		str	r4, [sp, #16]
 183:Core/Src/main.c **** 
 366              		.loc 1 183 3 is_stmt 1 view .LVU103
 183:Core/Src/main.c **** 
 367              		.loc 1 183 36 is_stmt 0 view .LVU104
 368 003c 0594     		str	r4, [sp, #20]
 185:Core/Src/main.c ****   {
 369              		.loc 1 185 3 is_stmt 1 view .LVU105
 185:Core/Src/main.c ****   {
 370              		.loc 1 185 7 is_stmt 0 view .LVU106
 371 003e 2146     		mov	r1, r4
 372 0040 01A8     		add	r0, sp, #4
 373 0042 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 374              	.LVL16:
 189:Core/Src/main.c **** 
 375              		.loc 1 189 1 view .LVU107
 376 0046 11B0     		add	sp, sp, #68
 377              	.LCFI7:
 378              		.cfi_def_cfa_offset 12
 379              		@ sp needed
 380 0048 30BD     		pop	{r4, r5, pc}
 381              		.cfi_endproc
 382              	.LFE70:
 384              		.section	.text.main,"ax",%progbits
 385              		.align	1
ARM GAS  /var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s 			page 13


 386              		.global	main
 387              		.syntax unified
 388              		.thumb
 389              		.thumb_func
 390              		.fpu softvfp
 392              	main:
 393              	.LFB69:
  84:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 394              		.loc 1 84 1 is_stmt 1 view -0
 395              		.cfi_startproc
 396              		@ Volatile: function does not return.
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399 0000 08B5     		push	{r3, lr}
 400              	.LCFI8:
 401              		.cfi_def_cfa_offset 8
 402              		.cfi_offset 3, -8
 403              		.cfi_offset 14, -4
  92:Core/Src/main.c **** 
 404              		.loc 1 92 3 view .LVU109
 405 0002 FFF7FEFF 		bl	HAL_Init
 406              	.LVL17:
  99:Core/Src/main.c **** 
 407              		.loc 1 99 3 view .LVU110
 408 0006 FFF7FEFF 		bl	SystemClock_Config
 409              	.LVL18:
 106:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 410              		.loc 1 106 3 view .LVU111
 411 000a FFF7FEFF 		bl	MX_GPIO_Init
 412              	.LVL19:
 108:Core/Src/main.c **** 
 413              		.loc 1 108 3 view .LVU112
 108:Core/Src/main.c **** 
 414              		.loc 1 108 15 is_stmt 0 view .LVU113
 415 000e FFF7FEFF 		bl	xEventGroupCreate
 416              	.LVL20:
 108:Core/Src/main.c **** 
 417              		.loc 1 108 13 view .LVU114
 418 0012 074B     		ldr	r3, .L19
 419 0014 1860     		str	r0, [r3]
 113:Core/Src/main.c **** 
 420              		.loc 1 113 3 is_stmt 1 view .LVU115
 421 0016 FFF7FEFF 		bl	osKernelInitialize
 422              	.LVL21:
 133:Core/Src/main.c **** 
 423              		.loc 1 133 3 view .LVU116
 133:Core/Src/main.c **** 
 424              		.loc 1 133 23 is_stmt 0 view .LVU117
 425 001a 064A     		ldr	r2, .L19+4
 426 001c 0021     		movs	r1, #0
 427 001e 0648     		ldr	r0, .L19+8
 428 0020 FFF7FEFF 		bl	osThreadNew
 429              	.LVL22:
 133:Core/Src/main.c **** 
 430              		.loc 1 133 21 view .LVU118
 431 0024 054B     		ldr	r3, .L19+12
 432 0026 1860     		str	r0, [r3]
ARM GAS  /var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s 			page 14


 140:Core/Src/main.c ****  
 433              		.loc 1 140 3 is_stmt 1 view .LVU119
 434 0028 FFF7FEFF 		bl	osKernelStart
 435              	.LVL23:
 436              	.L17:
 145:Core/Src/main.c ****   {
 437              		.loc 1 145 3 discriminator 1 view .LVU120
 150:Core/Src/main.c ****   /* USER CODE END 3 */
 438              		.loc 1 150 3 discriminator 1 view .LVU121
 145:Core/Src/main.c ****   {
 439              		.loc 1 145 9 discriminator 1 view .LVU122
 440 002c FEE7     		b	.L17
 441              	.L20:
 442 002e 00BF     		.align	2
 443              	.L19:
 444 0030 00000000 		.word	.LANCHOR0
 445 0034 00000000 		.word	.LANCHOR1
 446 0038 00000000 		.word	StartDefaultTask
 447 003c 00000000 		.word	defaultTaskHandle
 448              		.cfi_endproc
 449              	.LFE69:
 451              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 452              		.align	1
 453              		.global	HAL_GPIO_EXTI_Callback
 454              		.syntax unified
 455              		.thumb
 456              		.thumb_func
 457              		.fpu softvfp
 459              	HAL_GPIO_EXTI_Callback:
 460              	.LVL24:
 461              	.LFB72:
 229:Core/Src/main.c ****   if(pinNum == MY_PIN_INT_Pin){
 462              		.loc 1 229 45 view -0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 0
 465              		@ frame_needed = 0, uses_anonymous_args = 0
 230:Core/Src/main.c ****     xEventGroupSetBitsFromISR(xEventLed, 1, NULL);
 466              		.loc 1 230 3 view .LVU124
 230:Core/Src/main.c ****     xEventGroupSetBitsFromISR(xEventLed, 1, NULL);
 467              		.loc 1 230 5 is_stmt 0 view .LVU125
 468 0000 B0F5805F 		cmp	r0, #4096
 469 0004 00D0     		beq	.L27
 470 0006 7047     		bx	lr
 471              	.L27:
 229:Core/Src/main.c ****   if(pinNum == MY_PIN_INT_Pin){
 472              		.loc 1 229 45 view .LVU126
 473 0008 08B5     		push	{r3, lr}
 474              	.LCFI9:
 475              		.cfi_def_cfa_offset 8
 476              		.cfi_offset 3, -8
 477              		.cfi_offset 14, -4
 231:Core/Src/main.c ****   }
 478              		.loc 1 231 5 is_stmt 1 view .LVU127
 479 000a 0022     		movs	r2, #0
 480 000c 0121     		movs	r1, #1
 481 000e 024B     		ldr	r3, .L28
 482 0010 1868     		ldr	r0, [r3]
ARM GAS  /var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s 			page 15


 483              	.LVL25:
 231:Core/Src/main.c ****   }
 484              		.loc 1 231 5 is_stmt 0 view .LVU128
 485 0012 FFF7FEFF 		bl	xEventGroupSetBitsFromISR
 486              	.LVL26:
 233:Core/Src/main.c **** /* USER CODE END 4 */
 487              		.loc 1 233 1 view .LVU129
 488 0016 08BD     		pop	{r3, pc}
 489              	.L29:
 490              		.align	2
 491              	.L28:
 492 0018 00000000 		.word	.LANCHOR0
 493              		.cfi_endproc
 494              	.LFE72:
 496              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 497              		.align	1
 498              		.global	HAL_TIM_PeriodElapsedCallback
 499              		.syntax unified
 500              		.thumb
 501              		.thumb_func
 502              		.fpu softvfp
 504              	HAL_TIM_PeriodElapsedCallback:
 505              	.LVL27:
 506              	.LFB74:
 263:Core/Src/main.c ****     }
 264:Core/Src/main.c ****   }
 265:Core/Src/main.c ****   /* USER CODE END 5 */ 
 266:Core/Src/main.c **** }
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****  /**
 269:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 270:Core/Src/main.c ****   * @note   This function is called  when TIM2 interrupt took place, inside
 271:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 272:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 273:Core/Src/main.c ****   * @param  htim : TIM handle
 274:Core/Src/main.c ****   * @retval None
 275:Core/Src/main.c ****   */
 276:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 277:Core/Src/main.c **** {
 507              		.loc 1 277 1 is_stmt 1 view -0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511              		.loc 1 277 1 is_stmt 0 view .LVU131
 512 0000 08B5     		push	{r3, lr}
 513              	.LCFI10:
 514              		.cfi_def_cfa_offset 8
 515              		.cfi_offset 3, -8
 516              		.cfi_offset 14, -4
 278:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 281:Core/Src/main.c ****   if (htim->Instance == TIM2) {
 517              		.loc 1 281 3 is_stmt 1 view .LVU132
 518              		.loc 1 281 11 is_stmt 0 view .LVU133
 519 0002 0368     		ldr	r3, [r0]
 520              		.loc 1 281 6 view .LVU134
ARM GAS  /var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s 			page 16


 521 0004 B3F1804F 		cmp	r3, #1073741824
 522 0008 00D0     		beq	.L33
 523              	.LVL28:
 524              	.L30:
 282:Core/Src/main.c ****     HAL_IncTick();
 283:Core/Src/main.c ****   }
 284:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 287:Core/Src/main.c **** }
 525              		.loc 1 287 1 view .LVU135
 526 000a 08BD     		pop	{r3, pc}
 527              	.LVL29:
 528              	.L33:
 282:Core/Src/main.c ****     HAL_IncTick();
 529              		.loc 1 282 5 is_stmt 1 view .LVU136
 530 000c FFF7FEFF 		bl	HAL_IncTick
 531              	.LVL30:
 532              		.loc 1 287 1 is_stmt 0 view .LVU137
 533 0010 FBE7     		b	.L30
 534              		.cfi_endproc
 535              	.LFE74:
 537              		.section	.text.Error_Handler,"ax",%progbits
 538              		.align	1
 539              		.global	Error_Handler
 540              		.syntax unified
 541              		.thumb
 542              		.thumb_func
 543              		.fpu softvfp
 545              	Error_Handler:
 546              	.LFB75:
 288:Core/Src/main.c **** 
 289:Core/Src/main.c **** /**
 290:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 291:Core/Src/main.c ****   * @retval None
 292:Core/Src/main.c ****   */
 293:Core/Src/main.c **** void Error_Handler(void)
 294:Core/Src/main.c **** {
 547              		.loc 1 294 1 is_stmt 1 view -0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 0
 550              		@ frame_needed = 0, uses_anonymous_args = 0
 551              		@ link register save eliminated.
 295:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 296:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 299:Core/Src/main.c **** }
 552              		.loc 1 299 1 view .LVU139
 553 0000 7047     		bx	lr
 554              		.cfi_endproc
 555              	.LFE75:
 557              		.global	defaultTask_attributes
 558              		.section	.rodata.str1.4,"aMS",%progbits,1
 559              		.align	2
 560              	.LC0:
 561 0000 64656661 		.ascii	"defaultTask\000"
ARM GAS  /var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s 			page 17


 561      756C7454 
 561      61736B00 
 562              		.comm	defaultTaskHandle,4,4
 563              		.comm	xEvtLed,4,4
 564              		.section	.bss.xEventLed,"aw",%nobits
 565              		.align	2
 566              		.set	.LANCHOR0,. + 0
 569              	xEventLed:
 570 0000 00000000 		.space	4
 571              		.section	.rodata.defaultTask_attributes,"a"
 572              		.align	2
 573              		.set	.LANCHOR1,. + 0
 576              	defaultTask_attributes:
 577 0000 00000000 		.word	.LC0
 578 0004 00000000 		.space	16
 578      00000000 
 578      00000000 
 578      00000000 
 579 0014 00020000 		.word	512
 580 0018 18000000 		.word	24
 581 001c 00000000 		.space	8
 581      00000000 
 582              		.text
 583              	.Letext0:
 584              		.file 2 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/ar
 585              		.file 3 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/ar
 586              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 587              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 588              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 589              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 590              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 591              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 592              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 593              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 594              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 595              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 596              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 597              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
 598              		.file 16 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 599              		.file 17 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 600              		.file 18 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/l
 601              		.file 19 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 602              		.file 20 "Middlewares/Third_Party/FreeRTOS/Source/include/event_groups.h"
 603              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s:16     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s:170    .text.MX_GPIO_Init:00000000000000a8 $d
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s:178    .text.StartDefaultTask:0000000000000000 $t
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s:185    .text.StartDefaultTask:0000000000000000 StartDefaultTask
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s:281    .text.StartDefaultTask:0000000000000058 $d
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s:289    .text.SystemClock_Config:0000000000000000 $t
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s:296    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s:385    .text.main:0000000000000000 $t
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s:392    .text.main:0000000000000000 main
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s:444    .text.main:0000000000000030 $d
                            *COM*:0000000000000004 defaultTaskHandle
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s:452    .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s:459    .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s:492    .text.HAL_GPIO_EXTI_Callback:0000000000000018 $d
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s:497    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s:504    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s:538    .text.Error_Handler:0000000000000000 $t
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s:545    .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s:576    .rodata.defaultTask_attributes:0000000000000000 defaultTask_attributes
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s:559    .rodata.str1.4:0000000000000000 $d
                            *COM*:0000000000000004 xEvtLed
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s:565    .bss.xEventLed:0000000000000000 $d
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s:569    .bss.xEventLed:0000000000000000 xEventLed
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//ccmJeFRa.s:572    .rodata.defaultTask_attributes:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
xEventGroupWaitBits
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
xEventGroupCreate
osKernelInitialize
osThreadNew
osKernelStart
xEventGroupSetBitsFromISR
HAL_IncTick
