ARM GAS  /var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	NMI_Handler:
  25              	.LFB69:
  26              		.file 1 "Core/Src/stm32f1xx_it.c"
   1:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f1xx_it.c **** /**
   3:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Core/Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f1xx_it.c ****   * @attention
   8:Core/Src/stm32f1xx_it.c ****   *
   9:Core/Src/stm32f1xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Core/Src/stm32f1xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f1xx_it.c ****   *
  12:Core/Src/stm32f1xx_it.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/stm32f1xx_it.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/stm32f1xx_it.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/stm32f1xx_it.c ****   *                             www.st.com/SLA0044
  16:Core/Src/stm32f1xx_it.c ****   *
  17:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f1xx_it.c ****   */
  19:Core/Src/stm32f1xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f1xx_it.c **** 
  21:Core/Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f1xx_it.c **** #include "main.h"
  23:Core/Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  24:Core/Src/stm32f1xx_it.c **** #include "FreeRTOS.h"
  25:Core/Src/stm32f1xx_it.c **** #include "task.h"
  26:Core/Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  29:Core/Src/stm32f1xx_it.c **** 
  30:Core/Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  32:Core/Src/stm32f1xx_it.c **** 
ARM GAS  /var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s 			page 2


  33:Core/Src/stm32f1xx_it.c **** /* USER CODE END TD */
  34:Core/Src/stm32f1xx_it.c **** 
  35:Core/Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  37:Core/Src/stm32f1xx_it.c ****  
  38:Core/Src/stm32f1xx_it.c **** /* USER CODE END PD */
  39:Core/Src/stm32f1xx_it.c **** 
  40:Core/Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  42:Core/Src/stm32f1xx_it.c **** 
  43:Core/Src/stm32f1xx_it.c **** /* USER CODE END PM */
  44:Core/Src/stm32f1xx_it.c **** 
  45:Core/Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  47:Core/Src/stm32f1xx_it.c **** 
  48:Core/Src/stm32f1xx_it.c **** /* USER CODE END PV */
  49:Core/Src/stm32f1xx_it.c **** 
  50:Core/Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  52:Core/Src/stm32f1xx_it.c **** 
  53:Core/Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  54:Core/Src/stm32f1xx_it.c **** 
  55:Core/Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  56:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  57:Core/Src/stm32f1xx_it.c **** 
  58:Core/Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  59:Core/Src/stm32f1xx_it.c **** 
  60:Core/Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  61:Core/Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim2;
  62:Core/Src/stm32f1xx_it.c **** 
  63:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  64:Core/Src/stm32f1xx_it.c **** 
  65:Core/Src/stm32f1xx_it.c **** /* USER CODE END EV */
  66:Core/Src/stm32f1xx_it.c **** 
  67:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  68:Core/Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */ 
  69:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  70:Core/Src/stm32f1xx_it.c **** /**
  71:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  72:Core/Src/stm32f1xx_it.c ****   */
  73:Core/Src/stm32f1xx_it.c **** void NMI_Handler(void)
  74:Core/Src/stm32f1xx_it.c **** {
  27              		.loc 1 74 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  75:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  76:Core/Src/stm32f1xx_it.c **** 
  77:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  78:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  79:Core/Src/stm32f1xx_it.c **** 
  80:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  81:Core/Src/stm32f1xx_it.c **** }
  32              		.loc 1 81 1 view .LVU1
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
ARM GAS  /var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s 			page 3


  35              	.LFE69:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu softvfp
  45              	HardFault_Handler:
  46              	.LFB70:
  82:Core/Src/stm32f1xx_it.c **** 
  83:Core/Src/stm32f1xx_it.c **** /**
  84:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  85:Core/Src/stm32f1xx_it.c ****   */
  86:Core/Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  87:Core/Src/stm32f1xx_it.c **** {
  47              		.loc 1 87 1 view -0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
  88:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  89:Core/Src/stm32f1xx_it.c **** 
  90:Core/Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  91:Core/Src/stm32f1xx_it.c ****   while (1)
  54              		.loc 1 91 3 discriminator 1 view .LVU3
  92:Core/Src/stm32f1xx_it.c ****   {
  93:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  94:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  95:Core/Src/stm32f1xx_it.c ****   }
  55              		.loc 1 95 3 discriminator 1 view .LVU4
  91:Core/Src/stm32f1xx_it.c ****   {
  56              		.loc 1 91 9 discriminator 1 view .LVU5
  57 0000 FEE7     		b	.L3
  58              		.cfi_endproc
  59              	.LFE70:
  61              		.section	.text.MemManage_Handler,"ax",%progbits
  62              		.align	1
  63              		.global	MemManage_Handler
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu softvfp
  69              	MemManage_Handler:
  70              	.LFB71:
  96:Core/Src/stm32f1xx_it.c **** }
  97:Core/Src/stm32f1xx_it.c **** 
  98:Core/Src/stm32f1xx_it.c **** /**
  99:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
 100:Core/Src/stm32f1xx_it.c ****   */
 101:Core/Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 102:Core/Src/stm32f1xx_it.c **** {
  71              		.loc 1 102 1 view -0
  72              		.cfi_startproc
  73              		@ Volatile: function does not return.
ARM GAS  /var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s 			page 4


  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  77              	.L5:
 103:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 104:Core/Src/stm32f1xx_it.c **** 
 105:Core/Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 106:Core/Src/stm32f1xx_it.c ****   while (1)
  78              		.loc 1 106 3 discriminator 1 view .LVU7
 107:Core/Src/stm32f1xx_it.c ****   {
 108:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 109:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 110:Core/Src/stm32f1xx_it.c ****   }
  79              		.loc 1 110 3 discriminator 1 view .LVU8
 106:Core/Src/stm32f1xx_it.c ****   {
  80              		.loc 1 106 9 discriminator 1 view .LVU9
  81 0000 FEE7     		b	.L5
  82              		.cfi_endproc
  83              	.LFE71:
  85              		.section	.text.BusFault_Handler,"ax",%progbits
  86              		.align	1
  87              		.global	BusFault_Handler
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  91              		.fpu softvfp
  93              	BusFault_Handler:
  94              	.LFB72:
 111:Core/Src/stm32f1xx_it.c **** }
 112:Core/Src/stm32f1xx_it.c **** 
 113:Core/Src/stm32f1xx_it.c **** /**
 114:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 115:Core/Src/stm32f1xx_it.c ****   */
 116:Core/Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 117:Core/Src/stm32f1xx_it.c **** {
  95              		.loc 1 117 1 view -0
  96              		.cfi_startproc
  97              		@ Volatile: function does not return.
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101              	.L7:
 118:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 119:Core/Src/stm32f1xx_it.c **** 
 120:Core/Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 121:Core/Src/stm32f1xx_it.c ****   while (1)
 102              		.loc 1 121 3 discriminator 1 view .LVU11
 122:Core/Src/stm32f1xx_it.c ****   {
 123:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 124:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 125:Core/Src/stm32f1xx_it.c ****   }
 103              		.loc 1 125 3 discriminator 1 view .LVU12
 121:Core/Src/stm32f1xx_it.c ****   {
 104              		.loc 1 121 9 discriminator 1 view .LVU13
 105 0000 FEE7     		b	.L7
 106              		.cfi_endproc
 107              	.LFE72:
ARM GAS  /var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s 			page 5


 109              		.section	.text.UsageFault_Handler,"ax",%progbits
 110              		.align	1
 111              		.global	UsageFault_Handler
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 115              		.fpu softvfp
 117              	UsageFault_Handler:
 118              	.LFB73:
 126:Core/Src/stm32f1xx_it.c **** }
 127:Core/Src/stm32f1xx_it.c **** 
 128:Core/Src/stm32f1xx_it.c **** /**
 129:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 130:Core/Src/stm32f1xx_it.c ****   */
 131:Core/Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 132:Core/Src/stm32f1xx_it.c **** {
 119              		.loc 1 132 1 view -0
 120              		.cfi_startproc
 121              		@ Volatile: function does not return.
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125              	.L9:
 133:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 134:Core/Src/stm32f1xx_it.c **** 
 135:Core/Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 136:Core/Src/stm32f1xx_it.c ****   while (1)
 126              		.loc 1 136 3 discriminator 1 view .LVU15
 137:Core/Src/stm32f1xx_it.c ****   {
 138:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 139:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 140:Core/Src/stm32f1xx_it.c ****   }
 127              		.loc 1 140 3 discriminator 1 view .LVU16
 136:Core/Src/stm32f1xx_it.c ****   {
 128              		.loc 1 136 9 discriminator 1 view .LVU17
 129 0000 FEE7     		b	.L9
 130              		.cfi_endproc
 131              	.LFE73:
 133              		.section	.text.DebugMon_Handler,"ax",%progbits
 134              		.align	1
 135              		.global	DebugMon_Handler
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 139              		.fpu softvfp
 141              	DebugMon_Handler:
 142              	.LFB74:
 141:Core/Src/stm32f1xx_it.c **** }
 142:Core/Src/stm32f1xx_it.c **** 
 143:Core/Src/stm32f1xx_it.c **** /**
 144:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 145:Core/Src/stm32f1xx_it.c ****   */
 146:Core/Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 147:Core/Src/stm32f1xx_it.c **** {
 143              		.loc 1 147 1 view -0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s 			page 6


 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 148:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 149:Core/Src/stm32f1xx_it.c **** 
 150:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 151:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 152:Core/Src/stm32f1xx_it.c **** 
 153:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 154:Core/Src/stm32f1xx_it.c **** }
 148              		.loc 1 154 1 view .LVU19
 149 0000 7047     		bx	lr
 150              		.cfi_endproc
 151              	.LFE74:
 153              		.section	.text.FLASH_IRQHandler,"ax",%progbits
 154              		.align	1
 155              		.global	FLASH_IRQHandler
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 159              		.fpu softvfp
 161              	FLASH_IRQHandler:
 162              	.LFB75:
 155:Core/Src/stm32f1xx_it.c **** 
 156:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 157:Core/Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 158:Core/Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 159:Core/Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 160:Core/Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 161:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 162:Core/Src/stm32f1xx_it.c **** 
 163:Core/Src/stm32f1xx_it.c **** /**
 164:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Flash global interrupt.
 165:Core/Src/stm32f1xx_it.c ****   */
 166:Core/Src/stm32f1xx_it.c **** void FLASH_IRQHandler(void)
 167:Core/Src/stm32f1xx_it.c **** {
 163              		.loc 1 167 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167 0000 08B5     		push	{r3, lr}
 168              	.LCFI0:
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 3, -8
 171              		.cfi_offset 14, -4
 168:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN FLASH_IRQn 0 */
 169:Core/Src/stm32f1xx_it.c **** 
 170:Core/Src/stm32f1xx_it.c ****   /* USER CODE END FLASH_IRQn 0 */
 171:Core/Src/stm32f1xx_it.c ****   HAL_FLASH_IRQHandler();
 172              		.loc 1 171 3 view .LVU21
 173 0002 FFF7FEFF 		bl	HAL_FLASH_IRQHandler
 174              	.LVL0:
 172:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN FLASH_IRQn 1 */
 173:Core/Src/stm32f1xx_it.c **** 
 174:Core/Src/stm32f1xx_it.c ****   /* USER CODE END FLASH_IRQn 1 */
 175:Core/Src/stm32f1xx_it.c **** }
 175              		.loc 1 175 1 is_stmt 0 view .LVU22
 176 0006 08BD     		pop	{r3, pc}
ARM GAS  /var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s 			page 7


 177              		.cfi_endproc
 178              	.LFE75:
 180              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 181              		.align	1
 182              		.global	TIM2_IRQHandler
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 186              		.fpu softvfp
 188              	TIM2_IRQHandler:
 189              	.LFB76:
 176:Core/Src/stm32f1xx_it.c **** 
 177:Core/Src/stm32f1xx_it.c **** /**
 178:Core/Src/stm32f1xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 179:Core/Src/stm32f1xx_it.c ****   */
 180:Core/Src/stm32f1xx_it.c **** void TIM2_IRQHandler(void)
 181:Core/Src/stm32f1xx_it.c **** {
 190              		.loc 1 181 1 is_stmt 1 view -0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194 0000 08B5     		push	{r3, lr}
 195              	.LCFI1:
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 3, -8
 198              		.cfi_offset 14, -4
 182:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 183:Core/Src/stm32f1xx_it.c **** 
 184:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 185:Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 199              		.loc 1 185 3 view .LVU24
 200 0002 0248     		ldr	r0, .L15
 201 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 202              	.LVL1:
 186:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 187:Core/Src/stm32f1xx_it.c **** 
 188:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 189:Core/Src/stm32f1xx_it.c **** }
 203              		.loc 1 189 1 is_stmt 0 view .LVU25
 204 0008 08BD     		pop	{r3, pc}
 205              	.L16:
 206 000a 00BF     		.align	2
 207              	.L15:
 208 000c 00000000 		.word	htim2
 209              		.cfi_endproc
 210              	.LFE76:
 212              		.section	.text.EXTI15_10_IRQHandler,"ax",%progbits
 213              		.align	1
 214              		.global	EXTI15_10_IRQHandler
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
 218              		.fpu softvfp
 220              	EXTI15_10_IRQHandler:
 221              	.LFB77:
 190:Core/Src/stm32f1xx_it.c **** 
 191:Core/Src/stm32f1xx_it.c **** /**
ARM GAS  /var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s 			page 8


 192:Core/Src/stm32f1xx_it.c ****   * @brief This function handles EXTI line[15:10] interrupts.
 193:Core/Src/stm32f1xx_it.c ****   */
 194:Core/Src/stm32f1xx_it.c **** void EXTI15_10_IRQHandler(void)
 195:Core/Src/stm32f1xx_it.c **** {
 222              		.loc 1 195 1 is_stmt 1 view -0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226 0000 08B5     		push	{r3, lr}
 227              	.LCFI2:
 228              		.cfi_def_cfa_offset 8
 229              		.cfi_offset 3, -8
 230              		.cfi_offset 14, -4
 196:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI15_10_IRQn 0 */
 197:Core/Src/stm32f1xx_it.c **** 
 198:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI15_10_IRQn 0 */
 199:Core/Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_12);
 231              		.loc 1 199 3 view .LVU27
 232 0002 4FF48050 		mov	r0, #4096
 233 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 234              	.LVL2:
 200:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI15_10_IRQn 1 */
 201:Core/Src/stm32f1xx_it.c **** 
 202:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI15_10_IRQn 1 */
 203:Core/Src/stm32f1xx_it.c **** }
 235              		.loc 1 203 1 is_stmt 0 view .LVU28
 236 000a 08BD     		pop	{r3, pc}
 237              		.cfi_endproc
 238              	.LFE77:
 240              		.text
 241              	.Letext0:
 242              		.file 2 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/ar
 243              		.file 3 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/ar
 244              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 245              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 246              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 247              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 248              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 249              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 250              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 251              		.file 11 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 252              		.file 12 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 253              		.file 13 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/l
 254              		.file 14 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 255              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 256              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_flash.h"
ARM GAS  /var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_it.c
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s:16     .text.NMI_Handler:0000000000000000 $t
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s:24     .text.NMI_Handler:0000000000000000 NMI_Handler
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s:38     .text.HardFault_Handler:0000000000000000 $t
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s:45     .text.HardFault_Handler:0000000000000000 HardFault_Handler
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s:62     .text.MemManage_Handler:0000000000000000 $t
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s:69     .text.MemManage_Handler:0000000000000000 MemManage_Handler
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s:86     .text.BusFault_Handler:0000000000000000 $t
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s:93     .text.BusFault_Handler:0000000000000000 BusFault_Handler
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s:110    .text.UsageFault_Handler:0000000000000000 $t
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s:117    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s:134    .text.DebugMon_Handler:0000000000000000 $t
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s:141    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s:154    .text.FLASH_IRQHandler:0000000000000000 $t
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s:161    .text.FLASH_IRQHandler:0000000000000000 FLASH_IRQHandler
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s:181    .text.TIM2_IRQHandler:0000000000000000 $t
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s:188    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s:208    .text.TIM2_IRQHandler:000000000000000c $d
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s:213    .text.EXTI15_10_IRQHandler:0000000000000000 $t
/var/folders/k8/xlf8xpxs1pdcp86t317gf5z40000gp/T//cc7LuHVP.s:220    .text.EXTI15_10_IRQHandler:0000000000000000 EXTI15_10_IRQHandler

UNDEFINED SYMBOLS
HAL_FLASH_IRQHandler
HAL_TIM_IRQHandler
htim2
HAL_GPIO_EXTI_IRQHandler
